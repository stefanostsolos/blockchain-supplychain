# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

---
################################################################################
#
#   Section: Organizations
#
#   - This section defines the different organizational identities which will
#   be referenced later in the configuration.
#
################################################################################
Organizations:

    # SampleOrg defines an MSP using the sampleconfig.  It should never be used
    # in production but may be used as a template for other definitions
    - &OrdererOrg
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: OrdererOrg

        # ID to load the MSP definition as
        ID: OrdererMSP

        # MSPDir is the filesystem path which contains the MSP configuration
        MSPDir: ./network/crypto-config/ordererOrganizations/example.com/msp

        # Policies defines the set of policies at this level of the config tree
        # For organization policies, their canonical path is usually
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
            Writers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
            Admins:
                Type: Signature
                Rule: "OR('OrdererMSP.admin')"

        OrdererEndpoints:
            - 127.0.0.1:7050

    - &Producer
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: ProducerMSP

        # ID to load the MSP definition as
        ID: ProducerMSP

        MSPDir: ./network/crypto-config/peerOrganizations/producer.example.com/msp

        # Policies defines the set of policies at this level of the config tree
        # For organization policies, their canonical path is usually
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('ProducerMSP.admin', 'ProducerMSP.peer', 'ProducerMSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('ProducerMSP.admin', 'ProducerMSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('ProducerMSP.admin')"
                
        AnchorPeers:
            # AnchorPeers defines the location of peers which can be used
            # for cross org gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            - Host: 127.0.0.1
              Port: 7051
            - Host: 127.0.0.1
              Port: 7052

    - &Manufacturer
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: ManufacturerMSP

        # ID to load the MSP definition as
        ID: ManufacturerMSP

        MSPDir: ./network/crypto-config/peerOrganizations/manufacturer.example.com/msp

        # Policies defines the set of policies at this level of the config tree
        # For organization policies, their canonical path is usually
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('ManufacturerMSP.admin', 'ManufacturerMSP.peer', 'ManufacturerMSP.client', 'ManufacturerMSP.member')"
            Writers:
                Type: Signature
                Rule: "OR('ManufacturerMSP.admin', 'ManufacturerMSP.client', 'ManufacturerMSP.member')"
            Admins:
                Type: Signature
                Rule: "OR('ManufacturerMSP.admin', 'ManufacturerMSP.client', 'ManufacturerMSP.member') "
                
        AnchorPeers:
            # AnchorPeers defines the location of peers which can be used
            # for cross org gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            - Host: 127.0.0.1
              Port: 8051

    - &Distributor
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: DistributorMSP

        # ID to load the MSP definition as
        ID: DistributorMSP

        MSPDir: ./network/crypto-config/peerOrganizations/distributor.example.com/msp

        # Policies defines the set of policies at this level of the config tree
        # For organization policies, their canonical path is usually
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('DistributorMSP.admin', 'DistributorMSP.peer', 'DistributorMSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('DistributorMSP.admin', 'DistributorMSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('DistributorMSP.admin')"
                
        AnchorPeers:
            # AnchorPeers defines the location of peers which can be used
            # for cross org gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            - Host: 127.0.0.1
              Port: 9051
                
    - &Retailer
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: RetailerMSP

        # ID to load the MSP definition as
        ID: RetailerMSP

        MSPDir: ./network/crypto-config/peerOrganizations/retailer.example.com/msp

        # Policies defines the set of policies at this level of the config tree
        # For organization policies, their canonical path is usually
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('RetailerMSP.admin', 'RetailerMSP.peer', 'RetailerMSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('RetailerMSP.admin', 'RetailerMSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('RetailerMSP.admin')"
                
        AnchorPeers:
            # AnchorPeers defines the location of peers which can be used
            # for cross org gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            - Host: 127.0.0.1
              Port: 10051
            - Host: 127.0.0.1
              Port: 10152

    - &Consumer
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: ConsumerMSP

        # ID to load the MSP definition as
        ID: ConsumerMSP

        MSPDir: ./network/crypto-config/peerOrganizations/consumer.example.com/msp

        # Policies defines the set of policies at this level of the config tree
        # For organization policies, their canonical path is usually
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('ConsumerMSP.admin', 'ConsumerMSP.peer', 'ConsumerMSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('ConsumerMSP.admin', 'ConsumerMSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('ConsumerMSP.admin')"
                
        AnchorPeers:
            # AnchorPeers defines the location of peers which can be used
            # for cross org gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            - Host: 127.0.0.1
              Port: 10151
            - Host: 127.0.0.1
              Port: 10152
              
Capabilities:
        # Channel capabilities apply to both the orderers and the peers and must be
        # supported by both.
        # Set the value of the capability to true to require it.
        Channel: &ChannelCapabilities
            V1_4_3: true
            # V1.3 for Channel enables the new non-backwards compatible
            # features and fixes of fabric v1.3
            V1_3: false
            # V1.1 for Channel enables the new non-backwards compatible
            # features and fixes of fabric v1.1
            V1_1: false
    
        # Orderer capabilities apply only to the orderers, and may be safely
        # used with prior release peers.
        # Set the value of the capability to true to require it.
        Orderer: &OrdererCapabilities
            # V1.4.2 for Orderer is a catchall flag for behavior which has been
            # determined to be desired for all orderers running at the v1.4.2
            # level, but which would be incompatible with orderers from prior releases.
            # Prior to enabling V1.4.2 orderer capabilities, ensure that all
            # orderers on a channel are at v1.4.2 or later.
            V1_4_2: true
            # V1.1 for Orderer enables the new non-backwards compatible
            # features and fixes of fabric v1.1
            V1_1: false
    
        # Application capabilities apply only to the peer network, and may be safely
        # used with prior release orderers.
        # Set the value of the capability to true to require it.
        Application: &ApplicationCapabilities
            # V1.4.2 for Application enables the new non-backwards compatible
            # features and fixes of fabric v1.4.2.
            V1_4_2: true
            # V1.3 for Application enables the new non-backwards compatible
            # features and fixes of fabric v1.3.
            V1_3: false
            # V1.2 for Application enables the new non-backwards compatible
            # features and fixes of fabric v1.2 (note, this need not be set if
            # later version capabilities are set)
            V1_2: false
            # V1.1 for Application enables the new non-backwards compatible
            # features and fixes of fabric v1.1 (note, this need not be set if
            # later version capabilities are set).
            V1_1: false
################################################################################
#
#   SECTION: Application
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for application related parameters
#
################################################################################
Application: &ApplicationDefaults

    # Organizations is the list of orgs which are defined as participants on
    # the application side of the network
    Organizations:

    # Policies defines the set of policies at this level of the config tree
    # For Application policies, their canonical path is
    #   /Channel/Application/<PolicyName>
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"

    Capabilities:
        <<: *ApplicationCapabilities
################################################################################
#
#   SECTION: Orderer
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for orderer related parameters
#
################################################################################
Orderer: &OrdererDefaults

    # Orderer Type: The orderer implementation to start
    OrdererType: etcdraft
    # Addresses used to be the list of orderer addresses that clients and peers
    # could connect to.  However, this does not allow clients to associate orderer
    # addresses and orderer organizations which can be useful for things such
    # as TLS validation.  The preferred way to specify orderer addresses is now
    # to include the OrdererEndpoints item in your org definition
    Addresses:
        - localhost:7050

    EtcdRaft:
        Consenters:
        - Host: orderer.example.com
          Port: 7050
          ClientTLSCert: network/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt
          ServerTLSCert: network/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt

    # Batch Timeout: The amount of time to wait before creating a batch
    BatchTimeout: 2s

    # Batch Size: Controls the number of messages batched into a block
    BatchSize:

        # Max Message Count: The maximum number of messages to permit in a batch
        MaxMessageCount: 10

        # Absolute Max Bytes: The absolute maximum number of bytes allowed for
        # the serialized messages in a batch.
        AbsoluteMaxBytes: 99 MB

        # Preferred Max Bytes: The preferred maximum number of bytes allowed for
        # the serialized messages in a batch. A message larger than the preferred
        # max bytes will result in a batch larger than preferred max bytes.
        PreferredMaxBytes: 512 KB

    # Organizations is the list of orgs which are defined as participants on
    # the orderer side of the network
    Organizations:

    # Policies defines the set of policies at this level of the config tree
    # For Orderer policies, their canonical path is
    #   /Channel/Orderer/<PolicyName>
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        # BlockValidation specifies what signatures must be included in the block
        # from the orderer for the peer to validate it.
        BlockValidation:
            Type: ImplicitMeta
            Rule: "ANY Writers"

################################################################################
#
#   CHANNEL
#
#   This section defines the values to encode into a config transaction or
#   genesis block for channel related parameters.
#
################################################################################
Channel: &ChannelDefaults
    # Policies defines the set of policies at this level of the config tree
    # For Channel policies, their canonical path is
    #   /Channel/<PolicyName>
    Policies:
        # Who may invoke the 'Deliver' API
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        # Who may invoke the 'Broadcast' API
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        # By default, who may modify elements at this config level
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"

    # Capabilities describes the channel level capabilities, see the
    # dedicated Capabilities section elsewhere in this file for a full
    # description
    Capabilities:
        <<: *ChannelCapabilities

################################################################################
#
#   Profile
#
#   - Different configuration profiles may be encoded here to be specified
#   as parameters to the configtxgen tool
#
################################################################################
Profiles:            

        TraceOrdererGenesis:
            <<: *ChannelDefaults
            Orderer:
                <<: *OrdererDefaults
                Organizations:
                    - *OrdererOrg
                Capabilities:
                    <<: *OrdererCapabilities
            Consortiums:
                SampleConsortium:
                    Organizations:
                    - *Producer
                    - *Manufacturer
                    - *Distributor
                    - *Retailer
                    - *Consumer
                    
        TraceOrgsChannel:
            Consortium: SampleConsortium
            <<: *ChannelDefaults
            Application:
                <<: *ApplicationDefaults
                Organizations:
                    - *Producer
                    - *Manufacturer
                    - *Distributor
                    - *Retailer
                    - *Consumer
                Capabilities:
                    <<: *ApplicationCapabilities
